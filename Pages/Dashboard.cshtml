@page
@using FinanceTracker.Pages
@model DashboardModel
@{
    ViewData["Title"] = "Dashboard";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/css/DashboardStyles.css">
    <link rel="icon" type="image/png" sizes="32x24" href="..\images\BudgedBuddyTranspSmol32pxWide.png">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/js/site.js" defer></script>
</head>

<body>
    <header class="header">
        <div class="menu-icon" onclick="toggleMenu()">
            <div class="bar bar1"></div>
            <div class="bar bar2"></div>
            <div class="bar bar3"></div>
        </div>

        <div class="menu" id="menu">
            <a href="Dashboard">Dashboard</a>
            <a href="Investments">Investments</a>
            <a href="Budget">Budget</a>
            <a href="Transactions">Transactions</a>
            <a href="#Contact">Contact</a>
            <div class="Copyright-ham-footer">
                <p>&copy; 2024 Budget Buddy. All rights reserved.</p>
            </div>
        </div>

        <div class="user-options">
            <div class="login-button">
                <span onclick='onclick=location.href = "/UserSettings"'>@Model.WebUser?.Name</span>
            </div>
            <div class="dropdown">
                <span id="settings">Options</span>
                <div class="dropdown-content">
                    <a href="#profile">Profile</a>
                    <a href="#settings">Settings</a>
                    <a href="/Logout">Logout</a>
                </div>
            </div>
        </div>
    </header>

    <div class="Dashboard">
        <div class="account-wrapper">


            @* <div class="Chart-Container">
            <div class="expense-Chart">
            <canvas id="expensePieChart"></canvas>
            </div>
            <div class="Investment-Chart">
            <canvas id="investmentLineChart"></canvas>
            </div>
            </div>
            <div class="Transaction-History-Chart">
            <canvas id="transactionBarChart"></canvas>
            </div> *@

            @if (!Model.WebUser.HasFinancialAccounts())
            {
                <div class="nothing-here-text">
                    <p>Nothing Here yet...</p>
                    <p>Try adding a Bank account, Wallet, cash etc.</p>
                </div>
            }
            else
            {

                foreach (var bankAccount in Model.WebUser.BankAccounts)
                {
                    <div class="Bank-Acc-Container">
                        <h3>Bankaccount: @bankAccount.AccountName</h3>
                        <p>Balance: @bankAccount.Balance @bankAccount.Currency</p>
                    </div>
                }


                foreach (var cashAccount in Model.WebUser.CashAccounts)
                {
                    <div class="Cash-Acc-Container">
                        <h3>Cashstash @cashAccount.AccountName</h3>
                        <p>Balance: @cashAccount.Balance @cashAccount.Currency</p>
                    </div>
                }

                foreach (var cryptoWallet in Model.WebUser.CryptoWallets)
                {
                    <div class="Crypto-Wallet-Container">
                        <h3>Cryptowallet: @cryptoWallet.AccountName</h3>
                        <p>Balance: @cryptoWallet.Balance</p>
                    </div>
                }

                foreach (var portfolioAccount in Model.WebUser.PortfolioAccounts)
                {
                    <div class="Crypto-Wallet-Container">
                        <h3>Stockportoflio: @portfolioAccount.AccountName</h3>
                        <p>Balance: @portfolioAccount.Balance</p>
                    </div>
                }

                <div class="spacer"></div>



                <div class="add-new-financialAccount-field" onclick="addAccountWindow()">
                    <button class="add-new-fin-acc-plus">+</button>
                </div>

                <div class="add-new-acc-background" id="new-acc-menu">
                    <div class="add-new-acc-menu">
                        <button class="exit-btn" onclick="closeAccountMenu()">X</button>
                        <form method="post">
                            <select name="AccountType" id="Account-Type" class="Account-Type-Select" required>
                                <option value="" disabled selected></option>
                                <option value="BankAccount">Bank Account</option>
                                <option value="Cash">Cash</option>
                                <option value="Portfolio">Portfolio</option>
                                <option value="CryptoWallet">Crypto Wallet</option>
                            </select>

                            <input type="text" name="AccountName" class="Account-Name-Input" required>

                            <select name="Currency" id="Curreny-Select" class="Currency-Select" required>
                                @foreach (CurrencyType currency in Enum.GetValues(typeof(CurrencyType)))
                                {
                                    <option value="@currency">@currency</option>
                                }
                            </select>
                            <input type="submit" class="submit-Financial-Account-btn">
                        </form>
                    </div>
                </div>

            }
            <script>
                function addAccountWindow() {
                    document.getElementById('new-acc-menu').classList.toggle("visible");
                }

                function closeAccountMenu() {
                    document.getElementById('new-acc-menu').classList.toggle("visible");
                }

            </script>

            @* <script>



            expenseChart();

            investmentChart();


            var ctx = document.getElementById('transactionBarChart').getContext('2d');
            var transactionBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
            labels: ['Groceries', 'Rent', 'Utilities', 'Entertainment', 'Dining', 'Miscellaneous'],
            datasets: [{
            label: 'Transactions',
            data: [300, 500, 100, 200, 150, 80],
            backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
            }]
            },
            options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
            legend: {
            display: true,
            position: 'bottom',
            labels: {
            color: '#ffffff'
            }
            },
            scales: {
            x: {
            ticks: {
            color: '#ffffff'
            }
            },
            y: {
            ticks: {
            color: '#ffffff'
            }
            }
            }
            }
            }
            });




            function addAccountWindow() {
            document.getElementById('new-acc-menu').classList.toggle("visible");
            }

            function closeAccountMenu() {
            document.getElementById('new-acc-menu').classList.toggle("visible");
            }

            </script> *@

        </div>
    </div>
    <footer>
        <p>&copy; 2024 Budget Buddy. All rights reserved.</p>
    </footer>
</body>

</html>