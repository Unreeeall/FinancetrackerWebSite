@page
@using FinanceTracker.Pages
@using System.Globalization
@model TransactionsModel
@{
    ViewData["Title"] = "Transactions";
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/css/DashboardStyles.css">
    <link rel="icon" type="image/png" sizes="32x24" href="..\images\BudgedBuddyTranspSmol32pxWide.png">
    <script src="/js/site.js"></script>
</head>

<body>
    <header class="header">
        <div class="menu-icon" onclick="toggleMenu()">
            <div class="bar bar1"></div>
            <div class="bar bar2"></div>
            <div class="bar bar3"></div>
        </div>

        <div class="menu" id="menu">
            <a href="Dashboard">Dashboard</a>
            <a href="Investments">Investments</a>
            <a href="Budget">Budget</a>
            <a href="Transactions">Transactions</a>
            <a href="#Contact">Contact</a>
            <div class="Copyright-ham-footer">
                <p>&copy; 2024 Budget Buddy. All rights reserved.</p>
            </div>
        </div>

        <div class="user-options">
            <div class="login-button">
                <span onclick='onclick=location.href = "/UserSettings"'>@Model.WebUser?.Name</span>
            </div>
            <div class="dropdown">
                <span id="settings">Options</span>
                <div class="dropdown-content">
                    <a href="/UserSettings">Profile</a>
                    <a href="#settings">Settings</a>
                    <a href="/Logout">Logout</a>
                </div>
            </div>
        </div>
    </header>
    <div class="Dashboard">

        @if (!Model.WebUser.HasFinancialAccounts())
        {
            <div class="nothing-here-text">
                <p>Nothing Here yet...</p>
                <p>Try adding a Bank account, Wallet, cash etc.</p>
            </div>
        }
        else
        {
            <div class="Transaction-list">
                <table>
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th>Category</th>
                            <th>UseCase</th>
                            <th>Amount</th>
                            <th>Origin</th>
                            <th>Destination</th>
                            <th>Date</th>
                            <th class="edit-buttons">Actions</th>
                        </tr>
                    </thead>
                    <form id="Transaction-Form" method="post">
                        <tbody>
                            <tr>
                                <td>
                                    <select name="Type" id="type-select" class="type-select" required>
                                        <option value="" disabled selected></option>
                                        <option value="Expense">Expense</option>
                                        <option value="Transfer">Transfer</option>
                                        <option value="Income">Income</option>
                                    </select>
                                </td>
                                <td>
                                    <select id="category-Dropdown" class="category-drop" name="Category" required>
                                        <option value="" disabled selected></option>
                                        <option value="Groceries" data-type="Expense">Groceries</option>
                                        <option value="Investments" data-type="Expense">Investments</option>
                                        <option value="Tech" data-type="Expense">Tech</option>
                                        <option value="Savings" data-type="Expense">Savings</option>
                                        <option value="Traveling" data-type="Expense">Traveling</option>
                                        <option value="Incurance" data-type="Expense">Incurance</option>
                                        <option value="Gas" data-type="Expense">Gas</option>
                                        <option value="Car" data-type="Expense">Car</option>
                                        <option value="Houshold" data-type="Expense">Houshold</option>
                                        <option value="Fun & Freetime" data-type="Expense">Fun & Freetime</option>
                                        <option value="Salary" data-type="Income">Salary</option>
                                        <option value="Burrrrrr" data-type="Transfer">Burrrrrr</option>
                                        <option value="Other">Other</option>
                                    </select>
                                </td>
                                <td><input type="text" name="UseCase" class="usecase-field" required></td>
                                <td><input type="number" name="Amount" class="Amount-field" required min="0" value="0"
                                        step="any"></td>
                                <td><input type="text" name="Origin" class="Origin-field" required></td>
                                <td><input type="text" name="Destination" class="Destination-field" required></td>
                                <td><input type="datetime-local" name="Date" class="Date-field" required></td>
                                <td>
                                    <input class="submit-button" type="submit" asp-page-handler="AddTransaction"
                                        value="‚úÖ"></input>
                                </td>
                            </tr>
                        </tbody>
                    </form>

                    
                    @foreach (var transaction in Model.WebUser.Transactions.OrderByDescending(t => t.Date))
                    {
                        <tr id="row-@transaction.ID">
                            <td>@transaction.Type</td>
                            <td>@transaction.Category</td>
                            <td>@transaction.UseCase</td>
                            <td>@transaction.Amount</td>
                            <td>@transaction.Origin</td>
                            <td>@transaction.Destination</td>
                            <td>@transaction.Date</td>
                            <td class="edit-buttons">

                                <button type="button" onclick="editTransactionWindow(event, this)" data-id="@transaction.ID"
                                    data-type="@transaction.Type" data-category="@transaction.Category"
                                    data-usecase="@transaction.UseCase" data-amount="@transaction.Amount"
                                    data-origin="@transaction.Origin" data-destination="@transaction.Destination"
                                    data-date="@transaction.Date.ToString("s")">üñäÔ∏è</button>
                                <form method="post">
                                    <input type="hidden" name="Trans_ID" value="@transaction.ID" />
                                    <button type="submit" class="delete-button" asp-page-handler="DeleteTransaction">‚ùå</button>
                                </form>
                            </td>
                        </tr>
                    }
                </table>
            </div>

            <div class="edit-menu-background" id="edit-popup">
                <div class="edit-menu">
                    <button class="exit-btn" onclick="closeEditMenu()">X</button>
                    <form method="post" asp-page-handler="EditTransaction">
                        <input type="hidden" name="Trans_ID" id="edit-Trans-ID" />
                        <select name="Type" id="edit-type-select" class="edit-type-select" required>
                            <option value="" disabled selected></option>
                            <option value="Expense">Expense</option>
                            <option value="Transfer">Transfer</option>
                            <option value="Income">Income</option>
                        </select>

                        <select id="edit-category-Dropdown" class="edit-category-drop" name="Category" required>
                            <option value="" disabled selected></option>
                            <option value="Groceries" data-type="Expense">Groceries</option>
                            <option value="Investments" data-type="Expense">Investments</option>
                            <option value="Tech" data-type="Expense">Tech</option>
                            <option value="Savings" data-type="Expense">Savings</option>
                            <option value="Traveling" data-type="Expense">Traveling</option>
                            <option value="Incurance" data-type="Expense">Incurance</option>
                            <option value="Gas" data-type="Expense">Gas</option>
                            <option value="Car" data-type="Expense">Car</option>
                            <option value="Houshold" data-type="Expense">Houshold</option>
                            <option value="Fun & Freetime" data-type="Expense">Fun & Freetime</option>
                            <option value="Salary" data-type="Income">Salary</option>
                            <option value="Burrrrrr" data-type="Transfer">Burrrrrr</option>
                            <option value="Other">Other</option>
                        </select>
                        <input type="text" name="UseCase" class="edit-usecase-field" required>
                        <input type="number" name="Amount" class="edit-Amount-field" required min="0" value="0" step="any">
                        <input type="text" name="Origin" class="edit-Origin-field" required>
                        <input type="text" name="Destination" class="edit-Destination-field" required>
                        <input type="datetime-local" name="Date" class="edit-Date-field" required>
                        <button type="submit">Save</button>
                    </form>
                </div>
                <p> eier</p>
            </div>
        }

    </div>

    <footer>
        <p>&copy; 2024 Budget Buddy. All rights reserved.</p>
    </footer>


    <script>


        function editTransactionWindow(event, button) {
            document.getElementById('edit-popup').classList.toggle("visible");
            const transactionID = button.getAttribute('data-id');
            const transactionType = button.getAttribute('data-type');
            const transactionCategory = button.getAttribute('data-category');
            const transactionUseCase = button.getAttribute('data-usecase');
            const transactionAmount = button.getAttribute('data-amount');
            const transactionOrigin = button.getAttribute('data-origin');
            const transactionDestination = button.getAttribute('data-destination');
            const transactionDate = button.getAttribute('data-date');


            document.getElementById('edit-Trans-ID').value = transactionID;
            document.getElementById('edit-type-select').value = transactionType;
            document.getElementById('edit-category-Dropdown').value = transactionCategory;
            document.querySelector('.edit-usecase-field').value = transactionUseCase;
            document.querySelector('.edit-Amount-field').value = transactionAmount;
            document.querySelector('.edit-Origin-field').value = transactionOrigin;
            document.querySelector('.edit-Destination-field').value = transactionDestination;
            document.querySelector('.edit-Date-field').value = transactionDate;

        }

        function closeEditMenu() {
            document.getElementById('edit-popup').classList.toggle("visible");
        }

        document.getElementById('type-select').addEventListener('change', function () {
            const selectedType = this.value;
            const categoryDropdown = document.getElementById('category-Dropdown');
            const useCaseField = document.getElementById('usecase-field');
            const options = categoryDropdown.querySelectorAll('option');

            options.forEach(option => {
                option.style.display = 'none';
                if (option.getAttribute('data-type') && option.getAttribute('data-type').includes(selectedType)) {
                    option.style.display = 'block';
                }
            });

            // Reset the category dropdown to its default value
            categoryDropdown.value = '';

            if (selectedType === 'Income') {
                useCaseField.closest('td').style.display = 'none';
            } else {
                useCaseField.closest('td').style.display = 'table-cell';
            }
        });
    </script>


</body>

</html>